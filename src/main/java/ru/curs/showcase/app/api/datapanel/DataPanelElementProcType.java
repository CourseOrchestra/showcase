package ru.curs.showcase.app.api.datapanel;

import ru.curs.showcase.app.api.SerializableElement;

/**
 * Тип хранимой процедуры для элемента информационной панели.
 * 
 * @author den
 * 
 */
public enum DataPanelElementProcType implements SerializableElement {
	/**
	 * Процедура для сохранения.
	 */
	SAVE,
	/**
	 * Процедура для загрузки данных посредством Submission.
	 */
	SUBMISSION,
	/**
	 * Процедура для загрузки файла с сервера клиенту.
	 */
	DOWNLOAD,
	/**
	 * Процедура для загрузки файла на сервер.
	 */
	UPLOAD,
	/**
	 * Имя процедуры, возвращающей метаданные без данных для элемента.
	 * Процедура, заданная в атрибуте элемента, в этом случае будет загружать
	 * только данные.
	 */
	METADATA,
	/**
	 * Имя процедуры для пост-обработки данных, полученных из источника данных.
	 * Пример использования: получаем данные из БД хранимой процедурой и
	 * обрабатываем их в Jython.
	 */
	POSTPROCESS,
	/**
	 * Имя процедуры для получения панели инструментов.
	 */
	TOOLBAR,
	/**
	 * Имя процедуры для получения данных экспорта в Excel.
	 */
	EXPORTDATA,

	/**
	 * Имя процедуры для добавления записи в режиме редактирования грида.
	 */
	ADDRECORD,

	/**
	 * Имя процедуры частичного обновления грида.
	 */
	PARTIALUPDATE,

	/**
	 * Имя процедуры, возвращающей паренты для обновления текущего и нижнего
	 * уровней тригрида .
	 */
	UPDATEPARENTS,
	/**
	 * Имя процедуры, возвращающей данные для элемента JsForm.
	 */
	JSFORMSUBMIT
}
